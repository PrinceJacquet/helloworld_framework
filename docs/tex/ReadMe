<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <title>ReadMe</title>
  <style type="text/css">
      code{white-space: pre-wrap;}
      span.smallcaps{font-variant: small-caps;}
      span.underline{text-decoration: underline;}
      div.column{display: inline-block; vertical-align: top; width: 50%;}
  </style>
  <style type="text/css">
a.sourceLine { display: inline-block; line-height: 1.25; }
a.sourceLine { pointer-events: none; color: inherit; text-decoration: inherit; }
a.sourceLine:empty { height: 1.2em; }
.sourceCode { overflow: visible; }
code.sourceCode { white-space: pre; position: relative; }
div.sourceCode { margin: 1em 0; }
pre.sourceCode { margin: 0; }
@media screen {
div.sourceCode { overflow: auto; }
}
@media print {
code.sourceCode { white-space: pre-wrap; }
a.sourceLine { text-indent: -1em; padding-left: 1em; }
}
pre.numberSource a.sourceLine
  { position: relative; left: -4em; }
pre.numberSource a.sourceLine::before
  { content: attr(title);
    position: relative; left: -1em; text-align: right; vertical-align: baseline;
    border: none; pointer-events: all; display: inline-block;
    -webkit-touch-callout: none; -webkit-user-select: none;
    -khtml-user-select: none; -moz-user-select: none;
    -ms-user-select: none; user-select: none;
    padding: 0 4px; width: 4em;
    color: #aaaaaa;
  }
pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
div.sourceCode
  {  }
@media screen {
a.sourceLine::before { text-decoration: underline; }
}
code span.al { color: #ff0000; font-weight: bold; } /* Alert */
code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
code span.at { color: #7d9029; } /* Attribute */
code span.bn { color: #40a070; } /* BaseN */
code span.bu { } /* BuiltIn */
code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
code span.ch { color: #4070a0; } /* Char */
code span.cn { color: #880000; } /* Constant */
code span.co { color: #60a0b0; font-style: italic; } /* Comment */
code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
code span.do { color: #ba2121; font-style: italic; } /* Documentation */
code span.dt { color: #902000; } /* DataType */
code span.dv { color: #40a070; } /* DecVal */
code span.er { color: #ff0000; font-weight: bold; } /* Error */
code span.ex { } /* Extension */
code span.fl { color: #40a070; } /* Float */
code span.fu { color: #06287e; } /* Function */
code span.im { } /* Import */
code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
code span.kw { color: #007020; font-weight: bold; } /* Keyword */
code span.op { color: #666666; } /* Operator */
code span.ot { color: #007020; } /* Other */
code span.pp { color: #bc7a00; } /* Preprocessor */
code span.sc { color: #4070a0; } /* SpecialChar */
code span.ss { color: #bb6688; } /* SpecialString */
code span.st { color: #4070a0; } /* String */
code span.va { color: #19177c; } /* Variable */
code span.vs { color: #4070a0; } /* VerbatimString */
code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  </style>
  \usepackage{sectsty}
  \usepackage{graphicx}
  %\sectionfont{\clearpage}
  \usepackage{hyperref}
  
  \hypersetup{
    pdftitle={My awesome book},
    pdfauthor={learnbyexample},
    pdfsubject={pandoc},
    pdfkeywords={pandoc,pdf,xelatex}
  }
  \usepackage{fancyvrb,newverbs,xcolor}
  
  \definecolor{Light}{HTML}{F4F4F4}
  
  \let\oldtexttt\texttt
  \renewcommand{\texttt}[1]{
    \colorbox{Light}{\oldtexttt{#1}}
  }
</head>
<body>
\includegraphics{images/petit_prince.jpg}
\thispagestyle{empty}
<nav id="TOC">
<ul>
<li><a href="#test-1">test 1</a></li>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#python">Python</a><ul>
<li><a href="#example">Example</a></li>
</ul></li>
<li><a href="#ruby">Ruby</a><ul>
<li><a href="#example-1">Example</a></li>
</ul></li>
<li><a href="#cli">CLI</a></li>
<li><a href="#conclusion">Conclusion</a></li>
</ul>
</nav>
<h1 id="test-1">test 1</h1>
<ul>
<li>[x] liste</li>
</ul>
<h1 id="introduction">Introduction</h1>
<p>This is a sample <a href="https://github.github.com/gfm/">GitHub style markdown</a> file. Top level headers are chapters and other headings are for sub-sections.</p>
<h1 id="python">Python</h1>
<ul>
<li>Lists are declared within <code>[]</code> and elements are separated by <code>,</code></li>
<li>Each element can be of any data type, including list data type</li>
</ul>
<h2 id="example">Example</h2>
<p>Use <code>for</code> loop to iterate over a list.</p>
<div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb1-1" title="1">numbers <span class="op">=</span> [<span class="dv">2</span>, <span class="dv">12</span>, <span class="dv">3</span>, <span class="dv">25</span>, <span class="dv">624</span>, <span class="dv">21</span>, <span class="dv">5</span>, <span class="dv">9</span>, <span class="dv">12</span>]</a>
<a class="sourceLine" id="cb1-2" title="2">odd_numbers <span class="op">=</span> []</a>
<a class="sourceLine" id="cb1-3" title="3">even_numbers <span class="op">=</span> []</a>
<a class="sourceLine" id="cb1-4" title="4"></a>
<a class="sourceLine" id="cb1-5" title="5"><span class="cf">for</span> num <span class="kw">in</span> numbers:</a>
<a class="sourceLine" id="cb1-6" title="6">    odd_numbers.append(num) <span class="cf">if</span>(num <span class="op">%</span> <span class="dv">2</span>) <span class="cf">else</span> even_numbers.append(num)</a>
<a class="sourceLine" id="cb1-7" title="7"></a>
<a class="sourceLine" id="cb1-8" title="8"><span class="bu">print</span>(<span class="ss">f&#39;numbers:      </span><span class="sc">{</span>numbers<span class="sc">}</span><span class="ss">&#39;</span>)</a>
<a class="sourceLine" id="cb1-9" title="9"><span class="bu">print</span>(<span class="ss">f&#39;odd_numbers:  </span><span class="sc">{</span>odd_numbers<span class="sc">}</span><span class="ss">&#39;</span>)</a>
<a class="sourceLine" id="cb1-10" title="10"><span class="bu">print</span>(<span class="ss">f&#39;even_numbers: </span><span class="sc">{</span>even_numbers<span class="sc">}</span><span class="ss">&#39;</span>)</a></code></pre></div>
<h1 id="ruby">Ruby</h1>
<ul>
<li>Arrays are declared within <code>[]</code> and elements are separated by <code>,</code></li>
<li>Each element can be of any data type, including array data type</li>
</ul>
<h2 id="example-1">Example</h2>
<p>Use <code>each</code> method to iterate over an array.</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode ruby"><code class="sourceCode ruby"><a class="sourceLine" id="cb2-1" title="1">numbers = [<span class="dv">2</span>, <span class="dv">12</span>, <span class="dv">3</span>, <span class="dv">25</span>, <span class="dv">624</span>, <span class="dv">21</span>, <span class="dv">5</span>, <span class="dv">9</span>, <span class="dv">12</span>]</a>
<a class="sourceLine" id="cb2-2" title="2">odd_numbers = []</a>
<a class="sourceLine" id="cb2-3" title="3">even_numbers = []</a>
<a class="sourceLine" id="cb2-4" title="4"></a>
<a class="sourceLine" id="cb2-5" title="5">numbers.each { |n| n.even? ? even_numbers.append(n) : odd_numbers.append(n) }</a>
<a class="sourceLine" id="cb2-6" title="6"></a>
<a class="sourceLine" id="cb2-7" title="7">puts <span class="st">&quot;numbers:      </span><span class="ot">#{</span>numbers<span class="ot">}</span><span class="st">&quot;</span></a>
<a class="sourceLine" id="cb2-8" title="8">puts <span class="st">&quot;odd_numbers:  </span><span class="ot">#{</span>odd_numbers<span class="ot">}</span><span class="st">&quot;</span></a>
<a class="sourceLine" id="cb2-9" title="9">puts <span class="st">&quot;even_numbers: </span><span class="ot">#{</span>even_numbers<span class="ot">}</span><span class="st">&quot;</span></a></code></pre></div>
<h1 id="cli">CLI</h1>
<p>Executing the Python and Ruby programs mentioned in previous chapters:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><a class="sourceLine" id="cb3-1" title="1">$ <span class="ex">python3.7</span> list_looping.py</a>
<a class="sourceLine" id="cb3-2" title="2"><span class="ex">numbers</span>:      [2, 12, 3, 25, 624, 21, 5, 9, 12]</a>
<a class="sourceLine" id="cb3-3" title="3"><span class="ex">odd_numbers</span>:  [3, 25, 21, 5, 9]</a>
<a class="sourceLine" id="cb3-4" title="4"><span class="ex">even_numbers</span>: [2, 12, 624, 12]</a>
<a class="sourceLine" id="cb3-5" title="5"></a>
<a class="sourceLine" id="cb3-6" title="6">$ <span class="ex">ruby</span> array_looping.rb</a>
<a class="sourceLine" id="cb3-7" title="7"><span class="ex">numbers</span>:      [2, 12, 3, 25, 624, 21, 5, 9, 12]</a>
<a class="sourceLine" id="cb3-8" title="8"><span class="ex">odd_numbers</span>:  [3, 25, 21, 5, 9]</a>
<a class="sourceLine" id="cb3-9" title="9"><span class="ex">even_numbers</span>: [2, 12, 624, 12]</a></code></pre></div>
<h1 id="conclusion">Conclusion</h1>
<p>This sample file helps you see a demo for <code>markdown</code> to <code>pdf</code> conversion using <code>pandoc</code>.</p>
<p>By default, <code>background</code> is set to <code>null</code>.</p>
<p>Can be changed to different color to suit the chosen theme.</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode python"><code class="sourceCode python"><a class="sourceLine" id="cb4-1" title="1"><span class="co"># sample comment: a/b != a\b</span></a>
<a class="sourceLine" id="cb4-2" title="2"></a>
<a class="sourceLine" id="cb4-3" title="3"><span class="op">&gt;&gt;&gt;</span> <span class="dv">2</span> <span class="op">**</span> <span class="dv">5</span></a>
<a class="sourceLine" id="cb4-4" title="4"><span class="dv">32</span></a></code></pre></div>
<p>Executing Python program from shell:</p>
<div class="sourceCode" id="cb5"><pre class="sourceCode bash"><code class="sourceCode bash"><a class="sourceLine" id="cb5-1" title="1">$ <span class="ex">python3.7</span> list_looping.py</a>
<a class="sourceLine" id="cb5-2" title="2"><span class="ex">numbers</span>:      [2, 12, 3, 25, 624, 21, 5, 9, 12]</a>
<a class="sourceLine" id="cb5-3" title="3"><span class="ex">odd_numbers</span>:  [3, 25, 21, 5, 9]</a>
<a class="sourceLine" id="cb5-4" title="4"><span class="ex">even_numbers</span>: [2, 12, 624, 12]</a></code></pre></div>
<p>Just another line.</p>
</body>
</html>
